@page "/animaloverview"

@using model = AnimalShelterBlazorWA.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Authorization
@using AnimalShelterBlazorWA.Shared
@using AnimalShelterBlazorWA.Client.Services

@attribute [Authorize]
@inject HttpClient Http
@inject IJSRuntime JsRuntime 


<h3>Animals</h3>


<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5">


    @foreach (var animal in AnimalsInShelter)
    {
        <div class="col mb-4">
            <AnimalCard CurrentAnimal="animal" OnAnimalAdopted="AdoptAnimal"/>
        </div>
    }
</div>

<button class="btn btn-primary" @onclick="AddAnimal">Add Animal</button>


@code {

    private List<Animal> AnimalsInShelter = new List<Animal>();

    [Inject]
    private NavigationManager navigationManager { get; set; }

    [Inject]
    public IAnimalService AnimalService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetAllAnimals();
    }

    private async Task AdoptAnimal(Animal animalToAdopt)
    {
        // Confirm
        var confirmed = await JsRuntime.InvokeAsync<bool>("animalshelterjavascriptfunctions.confirm", $"Are you sure you want {animalToAdopt.Name} to be adopted?");

        if (confirmed)
        {
            // Delete the animal
            await AnimalService.Delete(animalToAdopt);

            // Get a new fresh list.
            await GetAllAnimals();
        }
    }

    private async Task GetAllAnimals()
    {
        AnimalsInShelter = await AnimalService.GetAllAnimalsInShelter();
    }

    private void AddAnimal()
    {
        navigationManager.NavigateTo("/AnimalDetail");
    }


}
