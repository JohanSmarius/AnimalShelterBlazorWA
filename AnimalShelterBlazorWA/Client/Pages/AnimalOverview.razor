@page "/animaloverview"

@using model = AnimalShelter.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@inject HttpClient Http
@inject IJSRuntime JsRuntime 


<h3>Animals</h3>


<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 row-cols-xl-5">


    @foreach (var animal in AnimalsInShelter)
    {
        <div class="col mb-4">
            <AnimalCard CurrentAnimal="animal" OnAnimalAdopted="AdoptAnimal"/>
        </div>
    }
</div>


@code {

    private List<model.Animal> AnimalsInShelter = new List<model.Animal>();


    protected override async Task OnInitializedAsync()
    {
        await GetAllAnimals();
    }


    private async Task AdoptAnimal(model.Animal animalToAdopt)
    {
        // Confirm
        var confirmed = await JsRuntime.InvokeAsync<bool>("animalshelterjavascriptfunctions.confirm", $"Are you sure you want {animalToAdopt.Name} to be adopted?");

        if (confirmed)
        {
            // Delete the animal
            await Http.DeleteAsync($"api/animal/{animalToAdopt.Id}");

            // Get a new fresh list.
            await GetAllAnimals();
        }

    }

    private async Task GetAllAnimals()
    {

        try
        {
            var response = await Http.GetFromJsonAsync<model.Animal[]>("api/Animal");
            AnimalsInShelter = response.ToList();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }



}
